# pylint: disable=duplicate-key
import decimal
from django import template
from datetime import datetime

register = template.Library()

PAISES = {
  'Afeganistão': 'AF',
  'Chile': 'CL',
  'África do Sul': 'ZA',
  'China': 'CN',
  'Albânia': 'AL',
  'Chipre': 'CY',
  'Alemanha': 'DE',
  'Colômbia': 'CO',
  'Andorra': 'AD',
  'Comores': 'KM',
  'Angola': 'AO',
  'Congo': 'CG',
  'Anguilla': 'AI',
  'Costa do Marfim': 'CI',
  'Antártica': 'AQ',
  'Costa Rica': 'CR',
  'Antígua e Barbuda': 'AG',
  'Croácia': 'HR',
  'Antilhas Holandesas': 'AN',
  'Cuba': 'CU',
  'Arábia Saudita': 'SA',
  'Dinamarca': 'DK',
  'Argélia': 'DZ',
  'Djibuti': 'DJ',
  'Argentina': 'AR',
  'Dominica': 'DM',
  'Armênia': 'AM',
  'Egito': 'EG',
  'Aruba': 'AW',
  'El Salvador': 'SV',
  'Austrália': 'AU',
  'Emirados Árabes Unidos': 'AE',
  'Áustria': 'AT',
  'Equador': 'EC',
  'Azerbaijão': 'AZ',
  'Eritreia': 'ER',
  'Bahamas': 'BS',
  'Escritório para Harmonização no Mercado Interno': 'EM',
  'Bangladesh': 'BD',
  'Eslováquia': 'SK',
  'Barbados': 'BB',
  'Eslovênia': 'SI',
  'Bareine': 'BH',
  'Espanha': 'ES',
  'Belarus': 'BY',
  'Estados Unidos da América': 'US',
  'Bélgica': 'BE',
  'Estônia': 'EE',
  'Belize': 'BZ',
  'Etiópia': 'ET',
  'Benelux': 'BX',
  'Federação Russa': 'RU',
  'Benin': 'BJ',
  'Fiji': 'FJ',
  'Bermudas': 'BM',
  'Filipinas': 'PH',
  'Bolívia': 'BO',
  'Finlândia': 'FI',
  'Bósnia e Herzegovina': 'BA',
  'França': 'FR',
  'Botswana': 'BW',
  'Gabão': 'GA',
  'Brasil': 'BR',
  'Gâmbia': 'GM',
  'Bulgária': 'BG',
  'Geórgia': 'GE',
  'Brunei Darussalam': 'BN',
  'Gana': 'GH',
  'Burkina Faso': 'BF',
  'Geórgia do Sul e Ilhas Sandwich do Sul': 'GS',
  'Burundi': 'BI',
  'Gibraltar': 'GI',
  'Butão': 'BT',
  'Granada': 'GD',
  'Cabo Verde': 'CV',
  'Grécia': 'GR',
  'Camarões': 'CM',
  'Groenlândia': 'GL',
  'Camboja': 'KH',
  'Guadalupe': 'GP',
  'Canadá': 'CA',
  'Guam': 'GU',
  'Catar': 'QA',
  'Guatemala': 'GT',
  'Cazaquistão': 'KZ',
  'Guiana': 'GY',
  'Chade': 'TD',
  'Guiné': 'GN',
  'Guiné Bissau': 'GW',
  'Jordânia': 'JO',
  'Guiné Equatorial': 'GQ',
  'Kiribati': 'KI',
  'Haiti': 'HT',
  'Kuwait': 'KW',
  'Holanda': 'NL',
  'Laos': 'LA',
  'Honduras': 'HN',
  'Lesoto': 'LS',
  'Hong-Kong': 'HK',
  'Letônia': 'LV',
  'Hungria': 'HU',
  'Líbano': 'LB',
  'Iêmen': 'YE',
  'Libéria': 'LR',
  'Ilha Bouvet': 'BV',
  'Líbia': 'LY',
  'Ilha do Homem': 'IM',
  'Liechtenstein': 'LI',
  'Ilha Natal': 'CX',
  'Lituânia': 'LT',
  'Ilha Norfalk': 'NF',
  'Luxemburgo': 'LU',
  'Ilhas Cayman': 'KY',
  'Macau': 'MO',
  'Ilhas Cocos': 'CC',
  'Madagascar': 'MG',
  'Ilhas Cook': 'CK',
  'Malásia': 'MY',
  'Ilhas do Canal': 'GG',
  'Malawi': 'MW',
  'Ilhas Faroe': 'FO',
  'Maldivas': 'MV',
  'Ilhas Heard e McDonald': 'HM',
  'Mali': 'ML',
  'Ilhas Malvinas': 'FK',
  'Malta': 'MT',
  'Ilhas Marianas do Norte': 'MP',
  'Marrocos': 'MA',
  'Ilhas Marshall': 'MH',
  'Martinica': 'MQ',
  'Ilhas Menores': 'UM',
  'Maurício': 'MU',
  'Ilhas Salomão': 'SB',
  'Mauritânia': 'MR',
  'Ilhas Turks e Caicos': 'TC',
  'México': 'MX',
  'Ilhas Virgens(Britânicas)': 'VG',
  'Mianmá': 'MM',
  'Ilhas Virgens(U.S.)': 'VI',
  'Micronésia': 'FM',
  'Ilhas Wallis e Futuna': 'WF',
  'Moçambique': 'MZ',
  'Índia': 'IN',
  'Mônaco': 'MC',
  'Indonésia': 'ID',
  'Mongólia': 'MN',
  'Irã': 'IR',
  'Mont Serrat': 'MS',
  'Iraque': 'IQ',
  'Montenegro': 'ME',
  'Irlanda': 'IE',
  'Namíbia': 'NA',
  'Islândia': 'IS',
  'Nauru': 'NR',
  'Israel': 'IL',
  'Nepal': 'NP',
  'Indonésia': 'ID',
  'Nicarágua': 'NI',
  'Irã': 'IR',
  'Níger': 'NE',
  'Iraque': 'IQ',
  'Nigéria': 'NG',
  'Irlanda': 'IE',
  'Noruega': 'NO',
  'Islândia': 'IS',
  'Nova Caledônia': 'NC',
  'Israel': 'IL',
  'Nova Zelândia': 'NZ',
  'Itália': 'IT',
  'Omã': 'OM',
  'Jamaica': 'JM',
  'Organização Africana de Propriedade Intelectual(OAPI)': 'OA',
  'Japão': 'JP',
  'Organização Mundial de Propriedade Intelectual – OMPI(WIPO)': 'WO',
  'Jersey': 'JE',
  'Organização Regional de Propriedade Industrial Africana': 'AP',
  'Palau': 'PW',
  'Suécia': 'SE',
  'Panamá': 'PA',
  'Suíça': 'CH',
  'Papua Nova Guiné': 'PG',
  'Suriname': 'SR',
  'Paquistão': 'PK',
  'Svalbard e Jan Mayen': 'SJ',
  'Paraguai': 'PY',
  'Tadjiquistão': 'TJ',
  'Peru': 'PE',
  'Tailândia': 'TH',
  'Pitcairn': 'PN',
  'Taiwan': 'TW',
  'Polinésia Francesa': 'PF',
  'Terras Austrais Francesas': 'TF',
  'Polônia': 'PL',
  'Territ.Britan.Oceano Índico': 'IO',
  'Porto Rico': 'PR',
  'Território Ocupado Palestino': 'PS',
  'Portugal': 'PT',
  'Timor-Leste': 'TL',
  'Quênia': 'KE',
  'Togo': 'TG',
  'Quirguistão': 'KG',
  'Tokelau': 'TK',
  'Reino Unido': 'GB',
  'Tonga': 'TO',
  'República Centro Africana': 'CF',
  'Trinidad e Tobago': 'TT',
  'República da Coréia': 'KR',
  'Tunísia': 'TN',
  'República da Macedônia': 'MK',
  'Turcomenistão': 'TM',
  'República da Moldova': 'MD',
  'Turquia': 'TR',
  'República Dem. Do Congo': 'CD',
  'Tuvalu': 'TV',
  'República Dominicana': 'DO',
  'Ucrânia': 'UA',
  'República Pop. Dem. da Coreia': 'KP',
  'Uganda': 'UG',
  'República Tcheca': 'CZ',
  'Uruguai': 'UY',
  'República Unida da Tanzânia': 'TZ',
  'Uzbequistão': 'UZ',
  'Reunião': 'RE',
  'Vanuatu': 'VU',
  'Romênia': 'RO',
  'Vaticano': 'VA',
  'Ruanda': 'RW',
  'Venezuela': 'VE',
  'Saara Ocidental': 'EH',
  'Vietnã': 'VN',
  'Saint Pierre e Miquelon': 'PM',
  'Yugoslávia': 'YU',
  'Samoa Americana': 'AS',
  'Zaire': 'ZR',
  'Samoa Ocidental': 'WS',
  'Zâmbia': 'ZM',
  'Santa Helena': 'SH',
  'Zimbábue': 'ZW',
  'Santa Lúcia': 'LC',
  'São Cristovão e Nevis': 'KN',
  'São Marino': 'SM',
  'São Tomé e Príncipe': 'ST',
  'São Vicente e Granadinas': 'VC',
  'Senegal': 'SN',
  'Serra Leoa': 'SL',
  'Sérvia': 'RS',
  'Seychelles': 'SC',
  'Singapura': 'SG',
  'Síria': 'SY',
  'Somália': 'SO',
  'Sri Lanka': 'LK',
  'Suazilândia': 'SZ',
  'Sudão': 'SD'
}



@register.filter(name='desconto3')
def desconto3(valor):
    if (valor > 60000.00):
        return round(valor * decimal.Decimal((3/100)), 2)

    return valor

@register.simple_tag(name="custofrete")
def custofrete(valor,custo,dia):
    if (valor > 0.00):
        return round((valor + decimal.Decimal((custo * dia))), 2)

    return valor


@register.filter(name='sigla_pais')
def sigla_pais(objeto):
    nome_pais = objeto.pais
    if nome_pais in PAISES:
        return PAISES[nome_pais]
    return nome_pais


@register.simple_tag(name='date_format')
def date_format(objeto, formato):
    data_nascimento = objeto.dataNascimento
    try:
        data_formatada = data_nascimento.strftime(formato)
        return data_formatada
    except AttributeError:
        return ''

